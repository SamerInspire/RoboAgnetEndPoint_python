# coding=utf8
from datetime import datetime
from enum import Enum
from random import randint

from Core.Config import settings


def getUrlBody(bodyType, info, query, valsToReplace):
    query = '"' + str(query) + '"'
    info = [0, 0] if info is None else info
    print('bodyType ===> ', bodyType)
    bodyJson = {}
    if bodyType in [a.name for a in APIsEnum]:
        bodyJson = APIsEnum.__getitem__(bodyType).value
    print('bodyType ===> ', bodyJson.get('body'))
    print('valsToReplace ===> ', valsToReplace)

    headers = bodyJson.get('headers')

    headers = {
        'X-IBM-Client-Id': '7ba45647aa95402d0c898f776feeac1a',
        'X-IBM-Client-Secret': '35581a93a21003d648a5019ce3dc231d',
        'Content-Type': 'application/json'
    } if headers is None else headers

    url = bodyJson['url']

    defaultValsToReplace = {
        'dateTime': datetime.today().strftime('%Y%m%d%H%M%S' + str(randint(1000, 99999))),
        'query': query,
        'par1': str(int(info[0])) if bodyType != 'login_api' else str(info[0]),
        'par2': str(int(info[1])) if bodyType != 'login_api' else str(info[1]),
        'DBName': 'HRSD',
        'pageSize': '100',
        'Email': str(settings.genEmail),
        'User': str(settings.userName),
        'Reason': str(settings.ticketNo),
        'RequestTime': str(datetime.today().now())
    }
    defaultValsToReplace = {**defaultValsToReplace,
                            **valsToReplace} if valsToReplace is not None else defaultValsToReplace
    if bodyJson.get('body') is None or ('{{' in url and '}}' in url):
        if defaultValsToReplace is not None:
            for key, val in defaultValsToReplace.items():
                if val is not None:
                    url = url.replace('{{' + key + '}}', str(val))

    body = bodyJson.get('body')
    if defaultValsToReplace is not None and body is not None:
        for key, val in defaultValsToReplace.items():
            if val is not None:
                body = body.replace('{{' + key + '}}', str(val))

    return [url, body, headers]


class APIsEnum(Enum):
    query_center_api_custom = {'url': 'http://192.168.30.20:30309/qc_querymanagement/v1/CustomQuery',
                               'body': '{ "CustomQueryRq": { "Header": { "TransactionId": "{{dateTime}}", "User": "{{User}}", "Reason": "{{Reason}}", "RoleId": "7" }, "Body": { "DBName": "{{DBName}}", "QueryText": {{query}}, "page": "0", "pagesize": {{pageSize}} } } }'}
    validate_api = {'url': 'https://gw-apic.qiwa.sa/takamol/prod/common/valestabexpreq',
                    'body': '{ "ValidateEstablishingExpansionRequestRq": { "Header": { "TransactionId": "{{dateTime}}", "ChannelId": "Qiwa", "SessionId": "212", "RequestTime": "2019-10-10 00:00:00.555", "MWRequestTime": "2019-10-10 00:00:00.555", "ServiceCode": "VEER0001", "DebugFlag": "1", "UserInfo": {} }, "Body": { "SequenceNumber": {{par2}}, "LaborOfficeId": {{par1}} } } }'}
    cr_information_api = {'url': 'http://icp-proxy.qiwa.info:30376/external/getcrdetails',
                          'body': '{"CrDetailsRq":{"Header":{"TransactionId":"2023042308240791792","ChannelId":"Integration","SessionId":"212","RequestTime":"2019-10-10 00:00:00.555","MWRequestTime":"2019-10-10 00:00:00.555","ServiceCode":"EXGCRD0001","DebugFlag":"1"},"Body":{"CRNumber":"{{CRNumber}}"}}}',
                          'headers': {'Content-Type': 'application/json'}}
    est_info_api = {'url': 'https://gw-apic.qiwa.sa/takamol/prod/qiwa/esb/getestablishmentinformation',
                    'body': '{"GetEstablishmentInformationRq":{"Header":{"TransactionId": "{{dateTime}}","ChannelId":"Qiwa","SessionId":"212","RequestTime":"2019-10-10 00:00:00.555","MWRequestTime":"2019-10-10 00:00:00.555","ServiceCode":"GEI00001","DebugFlag":"1"},"Body":{"LaborOfficeId":{{par1}},"EstablishmentSequanceNumber":{{par2}}}}}'}
    laborer_info_mol = {'url': 'https://gw-apic.qiwa.sa/takamol/prod/common/getlaborerinformationmlsd',
                        'body': '{\n     "GetLaborerInformationMLSDRq": {\n         "Header": {\n             "TransactionId": "{{dateTime}}",\n             "ChannelId": "ESB",\n             "SessionId": "212",\n             "RequestTime": "2019-10-10 00:00:00.555",\n             "MWRequestTime": "2019-10-10 00:00:00.555",\n             "ServiceCode": "MGLI0001",\n             "DebugFlag": "1",\n             "UserInfo": {\n                 "IDNumber": "2505138228 "\n             }\n         },\n         "Body": {\n             "IdNo": "{{IdOrBorderNo}}"\n         }\n     }\n }'}
    laborer_info_nic = {'url': 'https://gw-apic.qiwa.sa/takamol/prod/common/getforeigneralldata',
                        'body': '{"GetForeignerAllDataRq": {"Header": {"TransactionId": "{{dateTime}}","ChannelId": "ESB","SessionId": "212","RequestTime": "2019-10-10 00:00:00.555","MWRequestTime": "2019-10-10 00:00:00.555","ServiceCode": "GFAD0001","DebugFlag": "1","UserInfo": {"IDNumber": "2230616910"}},"Body": {  "IdOrBorderNo": "{{IdOrBorderNo}}"}}}'}
    nitaq_Info_qiwa = {
        'url': 'https://www.qiwa.sa/api/nitaqatForm/get-evaluation?lang=ar&economic_activity_id={{economic_activity_id}}&sub_activity_id={{sub_activity_id}}&number_saudi={{number_saudi}}&number_expats={{number_expats}}&rate={{SDivTotal}}&currentNos={{number_saudi}}&currentNoe={{number_expats}}'}
    nitaq_Info_qiwa_new = {
        'url': 'https://knowledge-center-be.qiwa.sa/api/v1/nitaqat',
        'body': '{"SaudisCount":{{number_saudi}},"NonSaudisCount":{{number_expats}},"NitaqActivityId":{{economic_activity_id}},"Isic4Code":{{sub_activity_id}},"compare":false}'}
    calc_est_balance_kc_Api = {'url': 'https://gw-apic.qiwa.sa/takamol/prod/kc/calcestbalance',
                               'body': '{"CalculateEstBalanceKCRq":{"Header":{"TransactionId": "{{dateTime}}","ChannelId":"QiwaKC","SessionId":"212","RequestTime":"2019-10-10 00:00:00.555","MWRequestTime":"2019-10-10 00:00:00.555","ServiceCode":"CEBKC001","DebugFlag":"1","UserInfo":{"UserId":"465740","IDNumber":"1024812248"}},"Body":{"LaborOfficeId":{{par1}},"EstablishmentSequence":{{par2}}}}}',
                               'headers': {
                                   'X-IBM-Client-Id': '[{"key":"X-IBM-Client-Id","type":"text","value":"7ba45647aa95402d0c898f776feeac1a"}]',
                                   'X-IBM-Client-Secret': '35581a93a21003d648a5019ce3dc231d'
                                   }
                               }
    employee_list_by_estno = {'url': 'https://gw-apic.qiwa.sa/takamol/prod/common/getestablabmlsd',
                              'body': '{\n "GetEstablishmentLaborersMLSDRq": {\n "Header": {\n "TransactionId": "{{dateTime}}",\n "ChannelId": "Qiwa",\n "RequestTime": "2021-07-06 11:44:10.199",\n "ServiceCode": "MGEL0001",\n "DebugFlag": 1\n },\n "Body": {\n "LaborOfficeId": {{par1}},\n "SequenceNumber": {{par2}},\n "PageIndex": {{PageIndex}},\n "PageSize": {{PageSize}}\n }\n }\n }'}
    login_api = {'url': 'http://192.168.30.84:32200/Qiwa_QueryCentre_Portal/LoginServlet',
                 'body': 'emailId={{par1}}&password={{par2}}&signin=Log%20in',
                 'headers': {'Content-Type': 'application/x-www-form-urlencoded', 'Content-Length': '71'}}
    manual_get_visa_info_api = {'url': 'http://datapower.qiwa.info:9007/SamisWSProd/MOL/Service.svc',
                                'body': '<soapenv:Envelope  xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:nic="http://NicWebServiceHeader" xmlns:urn="urn:MOI.NIC.eServices-V1"> <soapenv:Body> <urn:GetLaborVisaList> <urn:VisaNo>{{VisaOutGoingNumber}}</urn:VisaNo> <urn:ClientIpAddress>10.10.10.10</urn:ClientIpAddress> <urn:Operator_ID>1010101010</urn:Operator_ID> </urn:GetLaborVisaList> </soapenv:Body> </soapenv:Envelope>',
                                'headers': {'soapAction': 'urn:MOI.NIC.eServices-V1/IMOL_SERVICE/GetLaborVisaList',
                                            'Content-Type': 'application/xml'}}
    manual_get_remaining_borders_api = {'url': 'http://datapower.qiwa.info:9007/SamisWSProd/MOL/Service.svc',
                                        'body': '<soapenv:Envelope  xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:nic="http://NicWebServiceHeader" xmlns:urn="urn:MOI.NIC.eServices-V1"> <soapenv:Body> <urn:GetLaborVisaList> <urn:VisaNo>{{VisaOutGoingNumber}}</urn:VisaNo> <urn:LastBorderID>{{LastBorderID}}</urn:LastBorderID> <urn:ClientIpAddress>10.10.10.10</urn:ClientIpAddress> <urn:Operator_ID>1010101010</urn:Operator_ID> </urn:GetLaborVisaList> </soapenv:Body> </soapenv:Envelope>',
                                        'headers': {
                                            'soapAction': 'urn:MOI.NIC.eServices-V1/IMOL_SERVICE/GetLaborVisaList',
                                            'Content-Type': 'application/xml'}}
    manual_get_visa_info_api2 = {'url': 'http://icp-proxy.qiwa.info:30090/manual/nicvisas',
                                 'body': None,
                                 'headers': {'soapAction': 'urn:MOI.NIC.eServices-V1/IMOL_SERVICE/GetLaborVisaList',
                                             'Content-Type': 'application/xml'}}
    manual_nic_get_visa_info_api = {'url': 'https://gw-apic.qiwa.info/takamol/staging/visas/getvisainfo',
                                    'body': '<soapenv:Envelope  xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:nic="http://NicWebServiceHeader" xmlns:urn="urn:MOI.NIC.eServices-V1"> <soapenv:Body> <urn:GetLaborVisaList> <urn:VisaNo>{{VisaOutGoingNumber}}</urn:VisaNo> <urn:ClientIpAddress>10.10.10.10</urn:ClientIpAddress> <urn:Operator_ID>1010101010</urn:Operator_ID> </urn:GetLaborVisaList> </soapenv:Body> </soapenv:Envelope>',
                                    'headers': {'soapAction': 'urn:MOI.NIC.eServices-V1/IMOL_SERVICE/GetLaborVisaList',
                                                'Content-Type': 'application/xml'}}
    manual_nic_get_border_info_api = {'url': 'https://gw-apic.qiwa.info/takamol/staging/visas/getvisainfo',
                                      'body': '<soapenv:Envelope\n  xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"\n  xmlns:nic="http://NicWebServiceHeader"\n  xmlns:urn="urn:MOI.NIC.eServices-V1">\n  <soapenv:Body>\n  <urn:GetLaborVisaList>\n  <!--Optional:-->\n  <urn:BorderID>{{BorderNumber}}</urn:BorderID>\n  <urn:ClientIpAddress>10.10.10.10</urn:ClientIpAddress>\n  <!--Optional:-->\n  <urn:Operator_ID>1010101010</urn:Operator_ID>\n  </urn:GetLaborVisaList>\n  </soapenv:Body>\n  </soapenv:Envelope>',
                                      'headers': {
                                          'soapAction': 'urn:MOI.NIC.eServices-V1/IMOL_SERVICE/GetLaborVisaList',
                                          'Content-Type': 'application/xml'
                                      }}
    query_center_get_user_data = {'url': 'http://192.168.30.20:30309/qc_userauthentication/v1/getUserData',
                                  'body': '{"UserDataRq":{"Header":{"TransactionId":{{dateTime}},"RequestTime":"{{RequestTime}}"},"Body":{"email":"{{Email}}"}}}',
                                  'headers': {
                                      'Content-Type': 'text/plain;charset=UTF-8'
                                  }}
    update_laborer_info_api = {
        'url': 'https://gw-apic.qiwa.sa/takamol/prod/qiwa/v1/mlsd/insertmissinglabinfo?=AAIgNzZjZDU3YjI2ODY0MmZhZmMzYTE3ZDU3Y2NlYzQyOTWKX-jBaJLGrXngn97L8UwEilKeL3_2OKrcu6o__N3zzrVw7FIa1TURO0BZwip60nnSYjWa25_CrriI-AVXIWayELO3R1GENkYlE0mh09IZvE44c3As4NeJ6ftVcxyG7F_YN0lDInOa5x098Ayo1fey',
        'body': '{"IqamaNumber": "{{idOrBorder}}"}',
        'headers': {
            'Content-Type': 'application/json',
            'Accept': 'application/json',
            'X-IBM-Client-Id': 'd7604e3d26f58346057d597d96489d07',
            'X-IBM-Client-Secret': 'f0072209ecea66ff68b2473f8781b671:'
        }}
    get_est_qiwa_workspace_api = {
        'url': 'http://icp-proxy.qiwa.sa:32056/usermanagement/getqiwaworkspaceestablishments',
        'body': '{\n    "GetQiwaWorkspaceEstablishmentsRq": {\n        "Header": {\n            "TransactionId": "{{dateTime}}",\n            "ChannelId": "Qiwa",\n            "SessionId": "212",\n            "RequestTime": "2019-10-10 00:00:00.555",\n            "ServiceCode": "GQWE0001",\n            "DebugFlag": "1",\n            "UserInfo": {\n                "UserId": "465740",\n                "IDNumber": "1002108403"\n            }\n        },\n        "Body": {\n            "IdNo": "{{IdNo}}"\n        }\n    }\n}',
        'headers': {
            'Content-Type': 'application/json',
            'Accept': '*/*',
            'X-IBM-Client-Id': '7ba45647aa95402d0c898f776feeac1a',
            'X-IBM-Client-Secret': '35581a93a21003d648a5019ce3dc231d:'
        }}
    auth_indicator_contracts = {'url': 'https://gw-apic.qiwa.sa/takamol/prod/contractmanagement/contractauthindicator',
                                'body': '{\n    "ContractAuthenticationIndicatorRq": {\n        "Header": {\n            "TransactionId": "1664870817",\n            "ChannelId": "Qiwa",\n            "SessionId": "212",\n            "RequestTime": "2019-10-10 00:00:00.555",\n            "MWRequestTime": "2019-10-10 00:00:00.555",\n            "ServiceCode": "CAI00001",\n            "DebugFlag": "1"\n        },\n        "Body": {\n            "LaborOfficeId": "{{par1}}",\n            "SequenceNumber": "{{par2}}"\n        }\n    }\n}',
                                'headers': {
                                    'X-IBM-Client-Id': '7ba45647aa95402d0c898f776feeac1a',
                                    'X-IBM-Client-Secret': '35581a93a21003d648a5019ce3dc231d',
                                    'Accept': 'application/json',
                                    'Content-Type': 'application/json',
                                }}
    add_missing_privileges = {'url': 'http://icp-proxy.qiwa.sa:32123/test/updateprivs',
                              'body': '{\n            "LaborOfficeId": "{{par1}}",\n            "SequenceNumber": "{{par2}}",\n     "IDNumber": "{{IdNo}}"\n   }',
                              }
    updating_cr_issue = {'url': 'http://192.168.30.20:30309/qc_servicemanagement/v1/CommercialRecord',
                         'body': '{ "CrExpiryUpdateRq": { "Header": { "TransactionId": "{{dateTime}}", "User": "{{User}}", "RoleId": "7" }, "Body": { "CRNumber": "{{CRNumber}}"} } }'
                         }

    get_contract_details = {'url': 'https://gw-apic.qiwa.sa/takamol/prod/contractmanagement/getcontractdetails',
                            'body': '{"GetContractDetailsRq": {"Header": {"TransactionId": "{{dateTime}}","ChannelId": "ESB","SessionId": "212","RequestTime": "2019-10-10 00:00:00.555","MWRequestTime": "2019-10-10 00:00:00.555","ServiceCode":"GCD00001", "DebugFlag": "1", "UserInfo": {"IDNumber": "2230616910"}},"Body":{"ContractId":"{{ContractId}}"}}}'}

    validate_api_natpercentag = {'url': 'https://gw-apic.qiwa.sa/takamol/prod/qiwa/esb/validateestnatpercentage',
                                 'body': '{"ValidateEstNatPercentageRq": {"Header": {"TransactionId": "{{dateTime}}","ChannelId": "ESB","SessionId": "212","RequestTime": "2019-10-10 00:00:00.555","MWRequestTime": "2019-10-10 00:00:00.555","ServiceCode":"VENP0001", "DebugFlag": "1", "UserInfo":{"UserId":"51952","IDNumber":"1003012448"}},"Body":{"EntityNumber":"{{EntityId}}","NationalitiesList":{"NationalityItem":{"Code":"{{CodeNat}}","Number":"1"}},"ServiceCode":"QS000002"}}}'}


class AllQueriesEnum(Enum):
    ExpiredWpQuery = 'select MOLS.FK_UnifiedNumberId,MOLS.Name,MOLS.FK_LaborOfficeId,MOLS.SequenceNumber,VioLabo.IdNo,VioLabo.BorderNo,VioLabo.LastWPExpirationDate as WPExpiredDate,VioLabo.ExpirationDate as IqamehExpiredDate from MOL_GENERATION_PHASEI.dbo.MOL_ESTABLISHMENT MOLS, MOL_Generation_phaseI.dbo.Qiwa_VwEstablishmentsWithViolatedLaborers VioLabo with(nolock) where MOLS.PK_EstablishmentId = VioLabo.FK_EstablishmentId and MOLS.FK_UnifiedNumberId = (select FK_UnifiedNumberId from MOL_GENERATION_PHASEI.dbo.MOL_ESTABLISHMENT with(nolock) where SequenceNumber = \'{{par2}}\' and FK_LaborOfficeId = \'{{par1}}\' ) order by SequenceNumber, FK_LaborOfficeId'
    EstInfoFromSevenhundredQuery = 'select * from MOL_GENERATION_PHASEI.dbo.MOL_ESTABLISHMENT with(nolock) where Sevenhundred =\'{{par2}}\' and FK_EstablishmentStatusId=\'1\''
    EstInfoFromMOL_UnifiedNumberQuery = 'select * from MOL_GENERATION_PHASEI.dbo.MOL_UnifiedNumber with(nolock) where SevenHundredNumber =\'{{par2}}\' '
    EstInfoFromSeqLabQuery = 'select * from MOL_GENERATION_PHASEI.dbo.MOL_ESTABLISHMENT with(nolock) where SequenceNumber =\'{{par2}}\' and FK_LaborOfficeId = \'{{par1}}\' and FK_EstablishmentStatusId =\'1\''
    EstInfoFromCommRecQuery = 'select * from MOL_GENERATION_PHASEI.dbo.MOL_ESTABLISHMENT with(nolock) where CommercialRecordNumber =\'{{par2}}\' and FK_EstablishmentStatusId=\'1\''
    EvalHistoryQuery = 'select * From MOL_NITAQAT_III.dbo.ESTABLISHMENT_EVALUATION_history with (nolock)  where sequence_number=\'{{par2}}\' AND Labor_Office_Id=\'{{par1}}\' ORDER BY Run_Date  desc '
    UncountedLaborersQuery = 'select distinct gs.Id_Number,Establishment_Labor_Office,Establishment_Sequence_Number,L.FirstName,L.SecondName,L.ThirdName,L.FourthName,Laborer_Type,L.salary as SalaryInGosi,gs.Salary  as ActualSalary,Is_Disabled,Is_Prisoner,Is_Remote_Working,Is_Part_Timer,Is_Student,L.ModifiedOn from  MOL_Nitaqat_III.Gosi.Saudis gs with (noLock) Left join MOL_GENERATION_PHASEI.dbo.Mol_Laborer  L with(noLock)  on (  idNo = id_Number and FK_SaudiFlagId =1 And serviceEndDate is null and gs.Laborer_Type = 1 and FK_CurrentLaborOfficeId=Establishment_Labor_Office and establishmentsequencenumber=Establishment_Sequence_Number ) where establishmentsequencenumber=\'{{par2}}\' and FK_CurrentLaborOfficeId=\'{{par1}}\' and (is_Part_Timer =1 or is_student=1 or gs.Salary < 4000 or (Is_Remote_Working =1 and Is_Disabled=1))'
    UncountedLaborersUnderEntityQuery = 'select distinct gs.Id_Number,Establishment_Labor_Office,Establishment_Sequence_Number,L.FirstName,L.SecondName,L.ThirdName,L.FourthName,Laborer_Type,L.salary as SalaryInGosi,gs.Salary  as ActualSalary,Is_Disabled,Is_Prisoner,Is_Remote_Working,Is_Part_Timer,Is_Student,L.ModifiedOn from  MOL_Nitaqat_III.Gosi.Saudis gs with (noLock) Left join MOL_GENERATION_PHASEI.dbo.Mol_Laborer  L with(noLock)  on (  idNo = id_Number and FK_SaudiFlagId =1 And serviceEndDate is null   and FK_CurrentLaborOfficeId=Establishment_Labor_Office and establishmentsequencenumber=Establishment_Sequence_Number ) where   concat(concat(FK_CurrentLaborOfficeId,\'-\'),establishmentsequencenumber ) in (select concat(concat(Labor_Office_Id,\'-\'),Sequence_Number) from MOL_NITAQAT_III.DBO.Establishment_evaluation with(nolock) where Entity_Number =(select Entity_Number from MOL_NITAQAT_III.DBO.Establishment_evaluation  with(nolock) where Sequence_Number=\'{{par2}}\' and Labor_Office_Id=\'{{par1}}\' )) and Laborer_Type != 10  and (is_Part_Timer =1 or is_student=1 or gs.Salary < 4000 or (Is_Remote_Working =1 and Is_Disabled=1))'
    GettingEstsUnderEntity = 'select Entity_Color, Labor_Office_Id,Sequence_Number,Original_Entity_Number,Name,Original_Economic_Activity_Id,Original_Economic_Activity,Entity_Number,Unified_Sequence_Number,Foreigners,Saudis from MOL_NITAQAT_III.DBO.Establishment_evaluation with(nolock) where Entity_Number =(select Entity_Number from MOL_NITAQAT_III.DBO.Establishment_evaluation  with(nolock) where Sequence_Number=\'{{par2}}\' and Labor_Office_Id=\'{{par1}}\' )'
    SyncedSaudisQuery = 'select distinct gs.Id_Number,Establishment_Labor_Office,Establishment_Sequence_Number,L.FirstName,L.SecondName,L.ThirdName,L.FourthName,Laborer_Type,L.salary as SalaryInGosi,gs.Salary  as ActualSalary,Is_Disabled,Is_Prisoner,Is_Remote_Working,Is_Part_Timer,Is_Student,L.ModifiedOn, gs.Service_Start_Date from  MOL_Nitaqat_III.Gosi.Saudis gs with (noLock) Left join MOL_GENERATION_PHASEI.dbo.Mol_Laborer  L with(noLock)  on (  idNo = id_Number and FK_SaudiFlagId =1 And serviceEndDate is null   and FK_CurrentLaborOfficeId=Establishment_Labor_Office and establishmentsequencenumber=Establishment_Sequence_Number ) where establishmentsequencenumber=\'{{par2}}\' and FK_CurrentLaborOfficeId=\'{{par1}}\' '
    SyncedSaudisUnderUnifiedQuery = 'select distinct gs.Id_Number,Establishment_Labor_Office,Establishment_Sequence_Number,L.FirstName,L.SecondName,L.ThirdName,L.FourthName,Laborer_Type,L.salary as SalaryInGosi,gs.Salary  as ActualSalary,Is_Disabled,Is_Prisoner,Is_Remote_Working,Is_Part_Timer,Is_Student,L.ModifiedOn, gs.Service_Start_Date from  MOL_Nitaqat_III.Gosi.Saudis gs with (noLock) Left join MOL_GENERATION_PHASEI.dbo.Mol_Laborer  L with(noLock)  on (  idNo = id_Number and FK_SaudiFlagId =1 And serviceEndDate is null and FK_LaborerStatusId = 1  and FK_CurrentLaborOfficeId=Establishment_Labor_Office and establishmentsequencenumber=Establishment_Sequence_Number ) where FK_EstablishmentId in ( select W.PK_EstablishmentId from MOL_GENERATION_PHASEI.dbo.MOL_Establishment W with (nolock) where FK_UnifiedNumberId = \'{{UnifiedNumberId}}\') '
    ConstAAndBQuery = 'select Constant_A,Constant_B FROM Mol_Nitaqat_III.dbo.Evaluation with(noLock) where Economic_Activity_Id={{par1}} and color_ID = 310'
    ManualUpdateQuery = "update EstablishingVisaRequest set VisaOutGoingNumber='{{VisaOutGoingNumber}}',RequestStatusId='7',VisaIssuedDateHijri='{{VisaIssuedDateHijri}}',VisaIssuedDate='{{insertDate}}', RejectionDescription='Inserted Manually',LastModifiedDate=getDate() where id ='{{id}}'"
    VisaExistenceQuery = "select * from (select VisaOutGoingNumber,InsertDate from ExpansionVisaRequest with(nolock) where VisaOutGoingNumber={{VisaOutGoingNumber}}) as a UNION (select VisaOutGoingNumber,InsertDate from dbo.EstablishingVisaRequest with(nolock) where VisaOutGoingNumber={{VisaOutGoingNumber}}) UNION (select VisaOutGoingNumber,InsertDate from dbo.VisitVisaRequest with(nolock) where VisaOutGoingNumber=\'{{VisaOutGoingNumber}}\' )UNION (select VisaOutGoingNumber,InsertDate from dbo.SeasonalVisaRequest with(nolock) where VisaOutGoingNumber=\'{{VisaOutGoingNumber}}\')"
    VisasWithNoBorderIssue = " select er.ID, (select count(BorderNumber) as bCount from issuedVisas iv where iv.VisaRequestId = er.ID and iv.VisaRequestTypeId = 3 ) as bCount  from ExpansionVisaRequest er where visaOutGoingNumber is not Null and visaOutGoingNumber !='' and  (select count(BorderNumber) as bCount from issuedVisas iv where iv.VisaRequestId = er.ID and iv.VisaRequestTypeId = 3 ) <=0 and visaOutgoingNumber = {{VisaOutGoingNumber}} group by id"
    TierAllowanceInfo = 'select top 1 AllowanceEndDate, RequestDate, TerminationRequesterIdNo, TerminationDate, TierId, TierBalance from EstablishingVisaTier with(noLock) where LaborOfficeId = \'{{par1}}\' and EstablishmentSequence = \'{{par2}}\' ORDER BY RequestDate desc'
    GetVisasInfoByEstNumber = 'select borderNumber, visaStatusId, visaRequestId ,(select top 1 VisaOutGoingNumber from  (select VisaOutGoingNumber from ExpansionVisaRequest where id = iv.VisaRequestId and iv.VisaRequestTypeId = 3) as a UNION (select VisaOutGoingNumber from dbo.EstablishingVisaRequest with(nolock) where id = iv.VisaRequestId and iv.VisaRequestTypeId = 1) UNION (select VisaOutGoingNumber from dbo.VisitVisaRequest with(nolock) where id = iv.VisaRequestId and iv.VisaRequestTypeId = 2 )UNION (select top 1 VisaOutGoingNumber from dbo.hrsdoldvisas with(nolock) where VisaRequestId = iv.VisaRequestId and iv.VisaRequestTypeId = 11 )UNION (select VisaOutGoingNumber from dbo.SeasonalVisaRequest with(nolock) where id = iv.VisaRequestId and iv.VisaRequestTypeId = 8 )   ),InsertDate , LastModifiedDate from dbo.IssuedVisas as iv where VisaLaborOfficeId = \'{{par1}}\' and VisaSequenceNumber = \'{{par2}}\' and (VisaStatusId in ({{status}}) )'
    GetVisasInfoByBorderNumber = 'select borderNumber, visaStatusId, visaRequestId ,(select top 1 VisaOutGoingNumber from  (select VisaOutGoingNumber from ExpansionVisaRequest where id = iv.VisaRequestId and iv.VisaRequestTypeId = 3) as a UNION (select VisaOutGoingNumber from dbo.EstablishingVisaRequest with(nolock) where id = iv.VisaRequestId and iv.VisaRequestTypeId = 1) UNION (select VisaOutGoingNumber from dbo.VisitVisaRequest with(nolock) where id = iv.VisaRequestId and iv.VisaRequestTypeId = 2 )UNION (select top 1 VisaOutGoingNumber from dbo.hrsdoldvisas with(nolock) where VisaRequestId = iv.VisaRequestId and iv.VisaRequestTypeId = 11 )UNION (select VisaOutGoingNumber from dbo.SeasonalVisaRequest with(nolock) where id = iv.VisaRequestId and iv.VisaRequestTypeId = 8 )   ),InsertDate , LastModifiedDate from dbo.IssuedVisas as iv where borderNumber = \'{{par1}}\' and (VisaStatusId in ({{status}}) )'
    GetVisasInfoByVGON = 'select borderNumber, visaStatusId, visaRequestId , \'{{VisaOutGoingNumber}}\' ,InsertDate , LastModifiedDate from QIWA_MLSD_MAIN.dbo.IssuedVisas as iv with(nolock) where Concat(VisaRequestId,Concat(\'-\',VisaRequestTypeId)) in (select  * from (select Concat(id,Concat(\'-\',\'3\')) AS idType from dbo.ExpansionVisaRequest with(nolock) WHERE VisaOutGoingNumber=\'{{VisaOutGoingNumber}}\' ) as a UNION(select  Concat(id,Concat(\'-\',\'1\')) AS idType from dbo.EstablishingVisaRequest with(nolock) WHERE VisaOutGoingNumber=\'{{VisaOutGoingNumber}}\' ) UNION (select Concat(id,Concat(\'-\',\'2\')) AS idType from dbo.VisitVisaRequest with(nolock) WHERE VisaOutGoingNumber=\'{{VisaOutGoingNumber}}\' ) UNION (select Concat(id,Concat(\'-\',\'8\')) AS idType from dbo.SeasonalVisaRequest with(nolock) WHERE VisaOutGoingNumber=\'{{VisaOutGoingNumber}}\' ) UNION (select Concat(VisaRequestId,Concat(\'-\',\'11\')) AS idType from dbo.hrsdoldvisas with(nolock) where VisaOutGoingNumber=\'{{VisaOutGoingNumber}}\' ))'
    GetVGONExistance = 'select  * from (select Concat(id,Concat(\'-\',\'3\')) AS idType from dbo.ExpansionVisaRequest with(nolock) WHERE VisaOutGoingNumber=\'{{VisaOutGoingNumber}}\' ) as a UNION(select  Concat(id,Concat(\'-\',\'1\')) AS idType from dbo.EstablishingVisaRequest with(nolock) WHERE VisaOutGoingNumber=\'{{VisaOutGoingNumber}}\' ) UNION (select Concat(id,Concat(\'-\',\'2\')) AS idType from dbo.VisitVisaRequest with(nolock) WHERE VisaOutGoingNumber=\'{{VisaOutGoingNumber}}\' ) UNION (select Concat(id,Concat(\'-\',\'8\')) AS idType from dbo.SeasonalVisaRequest with(nolock) WHERE VisaOutGoingNumber=\'{{VisaOutGoingNumber}}\' ) UNION (select Concat(VisaRequestId,Concat(\'-\',\'11\')) AS idType from dbo.hrsdoldvisas with(nolock) where VisaOutGoingNumber=\'{{VisaOutGoingNumber}}\' )'
    GetCancelRequestByBordNo = 'select CreationDate from BorderNumberToBeCanceled where BorderNumber = \'{{BorderNumber}}\''
    AllEstsUnderOrgEntity = 'select Labor_Office_Id,Sequence_Number,Name,Original_Entity_Number,Original_Economic_Activity_Id,Original_Economic_Activity,Entity_Number,Unified_Sequence_Number from MOL_NITAQAT_III.DBO.Establishment_evaluation with(nolock) where CONCAT(CONCAT(Original_Economic_Activity_Id,\'-\'),Entity_Number) =(select CONCAT(CONCAT(Original_Economic_Activity_Id,\'-\'),Entity_Number) from MOL_NITAQAT_III.DBO.Establishment_evaluation  with(nolock) where Sequence_Number=\'{{par2}}\' and Labor_Office_Id=\'{{par1}}\' )'
    CheckForBusinessNotFoundExp = "select laborofficeid,establishmentsequence,establishmentid,insertdate\nfrom [qiwa_mlsd_main].[dbo].[expansionvisarequest]\ninner join (select max_id_all as id    from (select max([id]) max_id_all    from [qiwa_mlsd_main].[dbo].[expansionvisarequest]    group by [expansionvisarequest].establishmentsequence ,[expansionvisarequest].laborofficeid)cte_2    inner join (select max([id]) as max_id from [qiwa_mlsd_main].[dbo].[expansionvisarequest] with(nolock) WHERE [rejectiondescription] = 'ac3247e business not found'  and EstablishmentSequence = '{{EstablishmentSequence}}' and LaborOfficeId ='{{LaborOfficeId}}'   group by [expansionvisarequest].establishmentsequence ,[expansionvisarequest].laborofficeid)cte_1 on cte_2.max_id_all = cte_1.max_id)cte_3 on [expansionvisarequest].id = cte_3.id \norder by insertdate desc"
    CheckForBusinessNotFoundEst = "select laborofficeid,EstablishmentSequenceNumber,'establishmentid',insertdate\nfrom [qiwa_mlsd_main].[dbo].[EstablishingVisaRequest]\ninner join (select max_id_all as id    from (select max([id]) max_id_all    from [qiwa_mlsd_main].[dbo].[EstablishingVisaRequest]    group by [EstablishingVisaRequest].EstablishmentSequenceNumber ,[EstablishingVisaRequest].laborofficeid)cte_2    inner join (select max([id]) as max_id from [qiwa_mlsd_main].[dbo].[EstablishingVisaRequest] with(nolock) WHERE [rejectiondescription] = 'ac3247e business not found'  and EstablishmentSequenceNumber = '{{EstablishmentSequence}}' and LaborOfficeId ='{{LaborOfficeId}}'   group by [EstablishingVisaRequest].EstablishmentSequenceNumber ,[EstablishingVisaRequest].laborofficeid)cte_1 on cte_2.max_id_all = cte_1.max_id)cte_3 on [EstablishingVisaRequest].id = cte_3.id \norder by insertdate desc"
    ExceptionalEstInfo = "select QuotaBalance,CreationDate from Exceptional_Establishments where EstablishmentSequence='{{par2}}' and LaborOfficeId='{{par1}}' and StatusId=1 and ExpirationDate > GETDATE()"
    EstsIdsUnderUnified = "select W.PK_EstablishmentId from MOL_GENERATION_PHASEI.dbo.MOL_Establishment W with (nolock) where FK_UnifiedNumberId={{UnifiedNumberId}}   "
    LaborersUnderUnified = 'select IdNo, BorderNo from MOL_GENERATION_PHASEI.dbo.MOL_Laborer with(nolock) WHERE FK_EstablishmentId in \n ( \n select W.PK_EstablishmentId from MOL_GENERATION_PHASEI.dbo.MOL_Establishment W with (nolock) where FK_UnifiedNumberId = \'{{UnifiedNumberId}}\'\n) and FK_SaudiFlagId=2 and FK_LaborerStatusId = 1'
    LaborersUnderUnifiedRegularAct = 'select IdNo, BorderNo from MOL_GENERATION_PHASEI.dbo.MOL_Laborer with(nolock) WHERE concat(concat(EstablishmentSequenceNumber,\'-\'),FK_CurrentLaborOfficeId) in (select concat(concat(SequenceNumber,\'-\'),FK_LaborOfficeId) from MOL_GENERATION_PHASEI.dbo.MOL_ESTABLISHMENT with(nolock) where FK_UnifiedNumberId ={{UnifiedNumberId}} and FK_SubEconomicActivityId != \'15\' ) and FK_SaudiFlagId=2 and FK_LaborerStatusId = 1'
    LaborersUnderUnifiedAgriAct = 'select IdNo, BorderNo from MOL_GENERATION_PHASEI.dbo.MOL_Laborer with(nolock) WHERE concat(concat(EstablishmentSequenceNumber,\'-\'),FK_CurrentLaborOfficeId) in (select concat(concat(SequenceNumber,\'-\'),FK_LaborOfficeId) from MOL_GENERATION_PHASEI.dbo.MOL_ESTABLISHMENT with(nolock) where FK_UnifiedNumberId ={{UnifiedNumberId}} and FK_SubEconomicActivityId = \'15\' ) and FK_SaudiFlagId=2 and FK_LaborerStatusId = 1'
    SaudisUnderUnified = 'select IdNo,ServiceStartDate from MOL_GENERATION_PHASEI.dbo.MOL_Laborer with(nolock) WHERE FK_EstablishmentId in \n ( \n select W.PK_EstablishmentId from MOL_GENERATION_PHASEI.dbo.MOL_Establishment W with (nolock) where FK_UnifiedNumberId = \'{{UnifiedNumberId}}\'\n) and FK_SaudiFlagId=2 and FK_LaborerStatusId = 1'
    FinancialInfoByEstsIds = "select FinancialYearStart_Grg, UN_Foreigners,UN_GOSI_Saudis,UN_Owners, UN_SmallUNExemptedLaborers \n from MOL_NITAQAT_III.dbo.wp200 mwp with (nolock) inner Join mol_generation_phaseI.dbo.MOL_UnifiedNumber M on (\n	mwp.Unified_Sequence_no = M.SequenceNumber and  mwp.Unified_Lab_off = M.FK_LaborOfficeId \n) where M.PK_UnifiedNumberId =\'{{UnifiedNumberId}}\' "
    ExemptionInfoByEstsId = 'select UN_Foreigners,UN_GOSI_Saudis,UN_Owners,FinancialYearStart_Grg, UN_SmallUNExemptedLaborers  from MOL_NITAQAT_III.dbo.wp200 with (nolock) where\n Concat(Unified_Sequence_no,Concat(\'-\',Unified_Lab_off))=(\n select Concat(M.SequenceNumber,Concat(\'-\',M.FK_LaborOfficeId)) from  mol_generation_phaseI.dbo.MOL_UnifiedNumber M with (nolock)\n where PK_UnifiedNumberId =\'{{UnifiedNumberId}}\' \n )'
    TransAndPeriodInfo = 'select distinct mst.PK_Service_TransactionId,mst.TransactionDate, mst.TransactionFees, mst.BillNumber,mw.Period,mw.IsSynchronized  \n from mol_generation_phaseI.dbo.MOL_SRV_TRANSACTION mst with (nolock)\n join MOL_GEneration_PHASEI.[dbo].[MOL_WORKPERMIT] mw with (nolock) on (mw.FK_Service_TransactionId = mst.PK_Service_TransactionId)\n where FK_EstablishmentId in ({{EstablishmentsId}})  and FK_Service_LastServiceStatusId=3 and mst.TransactionDate >= \'{{FinancialYearStart}}\'\n order by TransactionDate desc '
    WPNormalLaborer = 'select DateDiff(month,WPStartDate,WPEndDate) as months,* from MOL_GENERATION_PHASEI.dbo.[WPEF_WPNormalLaborer] wpnl with (nolock) where wpnl.transactionid = \'{{transactionid}}\' and TotalLaborerWPFees > 0 order by WPStartDate desc'
    WPPenalityLaborer = 'select DateDiff(month,WPStartDate,WPEndDate) as months,* from MOL_GENERATION_PHASEI.dbo.[WPEF_WPPenalityLaborer] wppl with (nolock)  where TransactionId =\'{{transactionid}}\'  order by WPStartDate desc'
    IndustrialExemptionEst = 'select * from mol_generation_phaseI.dbo.MOL_IndustrialEstablishment with (nolock) where SequenceNumber={{par2}}  and FK_LaborOfficeId= {{par1}}'
    LastLaborerCompletedEt = 'select top 1 concat(concat(SourceLaborOfficeId,\'-\'),SourceEstablishmentSequence) as \'SourceEstablishmentNumber\',concat(concat(DestinationLaborOfficeId,\'-\'),DestinationEstablishmentSequence) as \'DestinationEstablishmentNumber\', statusId,  id, ContractId, DestinationUnifiedNationalNo, NICExpiryDate from ChangeSponsorRequestDetails with (nolock) where LaborerIdNo = \'{{LaborerIdNo}}\' and statusId in (4,5,6,8,12) order by insertDate desc'
    ETOutSideQiwa = 'select * from NIC_ChangeSponsorRequest where IdNo = \'{{LaborerIdNo}}\' and EstablishmentId = \'{{NIC700Number}}\' '
    LaborerInfoInMolByBorder = 'select FK_NationalityId, FK_LaborerStatusId,FirstName,SecondName,ThirdName,FourthName,IdNo, concat(concat(FK_CurrentLaborOfficeId,\'-\'), EstablishmentSequenceNumber) as estNumber, FK_ServiceEndReasonId ,LastWPStartDate	,LastWPExpirationDate from MOL_Generation_phaseI.dbo.Mol_laborer with(nolock)where BorderNo in(\'{{LabNo}}\')'
    LaborerInfoInMolByIdNo = 'select FK_NationalityId, FK_LaborerStatusId,FirstName,SecondName,ThirdName,FourthName,IdNo, concat(concat(FK_CurrentLaborOfficeId,\'-\'), EstablishmentSequenceNumber) as estNumber, FK_ServiceEndReasonId,LastWPExpirationDate,LastWPStartDate from MOL_Generation_phaseI.dbo.Mol_laborer with(nolock)where IdNo in(\'{{LabNo}}\')'
    LaborerInfoWPCheck = 'select L.FK_WpId,L.FK_lastWpId, L.PK_LaborerId,W.FK_Servcie_ServiceRequestTypeId,W.startDate,W.ExpirationDate, W.isSynchronized,L.LastWpExpirationDate as IqamaExp from MOL_GENERATION_PHASEI.dbo.MOL_laborer L with(nolock)Left join  MOL_GEneration_PHASEI.[dbo].[MOL_WORKPERMIT] W with (nolock) on  W.pk_WPID = L.FK_WpId   where IdNo  = \'{{LabNo}}\''
    VisaInformationByBorderNumber = 'select VisaRequestTypeId,VisaStatusID,BorderNumber from IssuedVisas where BorderNumber =\'{{BorderNumber}}\' '
    ContractInfoByLab = 'select id,IsGosiMigrated,EstablishmentNameAr,LaborOfficeId,SequenceNumber from Contracts with(nolock) where LaborerId =\'{{LaborerId}}\' and statusId = 15 order by CreationDate ASC\n'
    ContractInfoByLabEst = 'select top 1 id,IsGosiMigrated,EstablishmentNameAr from Contracts with (nolock) where LaborerId =\'{{LaborerId}}\' and SequenceNumber = {{SequenceNumber}} and  LaborOfficeId = {{LaborOfficeId}} and statusId = 15 order by CreationDate ASC\n'
    GOSILogByContractId = 'select * from GOSILog where FK_ContractId=\'{{ContractId}}\' and GosiResponse like N\'%تم تسجيل المشترك بنجاح%\' order by \n'
    GosiInfoForLabId = 'select * from MOL_Nitaqat_III.Gosi.Saudis with(nolock) where Id_Number ={{LaborerId}}'
    IsHomeJob = 'select IsHomeJob from Lookup_job where id={{jobCode}}'
    ChangeActivityRequest = 'select *  from MOL_GENERATION_PHASEI.dbo.MOL_ChangeEstablishmentActivityRequest with(NoLock) where FK_EstablishmentId = \'{{FK_EstablishmentId}}\'  and (Fk_OldSubEconomicActivityId = \'{{SubEconomicActivityId}}\' or FK_NewSubEconomicActivityId= \'{{SubEconomicActivityId}}\') and DateCreated > \'01-01-2023\' order by DateCreated Desc'
    AbsentFromWorkRequest = 'select top 1 CreationDate,FK_TerminationStatusID,CONCAT(CONCAT(LaborOfficeId, \'-\'),SequenceNumber) from AbsentEmployeeRequestDetails where IqamaNumber = \'{{IqamaNumber}}\' order by CreationDate desc'
    RunAwayDetailsData = 'select top 1 * from CTFAL_RunAwayDetails where LaborerID = \'{{IqamaNumber}}\' and ResponseXML != \'\' order by TimeStamp Desc'
    SadadDetails = 'select FK_Service_LastServiceStatusId,StatusLastModificationDate,BillNumber,TransactionFees,PK_Service_TransactionId from MOL_GENERATION_PHASEI.dbo.MOL_Srv_Transaction with(nolock) where {{BillNumber}})'
    TransIdFormWp = 'PK_Service_TransactionId in (select FK_Service_TransactionId from MOL_GENERATION_PHASEI.dbo.MOL_WorkPermit with(nolock) where pk_wpid in\n(select Fk_wpid from MOL_GENERATION_PHASEI.dbo.MoL_laborer with(nolock) where {{IdNoBorderNo}} =\'{{LaborerId}}\')'
    LaborIndebtednessDetails = 'select * from MOL_GENERATION_PHASEI.dbo.MOL_LaborerChangeSponsor with (nolock) where LaborerId = (select PK_LaborerId from MOL_GENERATION_PHASEI.dbo.MOL_laborer with(nolock) where IdNo =  \'{{LaborerId}}\')'
    LastETDetails = 'select top 1 LaborerIdNo, SourceLaborOfficeId, SourceEstablishmentSequence,DestinationLaborOfficeId,DestinationEstablishmentSequence,StatusId, LastModifiedDate,TransferType,IsRunAway from dbo.ChangeSponsorRequestDetails with (nolock) Where LaborerIdNo =\'{{LaborerId}}\' and StatusId = 5 order by LastModifiedDate'
    TransOutQiwa = 'SELECT p_id_no, o_lab_off_cmpy, o_cmpy_no,p_lab_off_cmpy,p_cmpy_no,\'15\' as StatusId, TimeStamp, \'outQiwa\',Reason ,CAST(CASE WHEN Reason like \'%Auto Accepted : Fake Runner.%\' THEN 1 ELSE 0 END AS bit) as isRunAway  FROM  MOL_GENERATION_PHASEI.dbo.ST_Online_Requests with (nolock) where Reason  like \'%Auto Accepted : Fake Runner.%\'  and p_id_no = \'{{LaborerId}}\'   order by createdon '
    EstablishmentHistory = 'select Entity_Size, Calculation_Type_Id ,Entity_Saudis_Total_Factorized,Economic_Activity_Id, Entity_Color,Entity_Color_Id, Run_Date,Is_Below_Green,Entity_Saudi_Percentage,Sub_Economic_Activity_Id,Main_Economic_Activity_Id,Entity_Saudis,Entity_Owners,Entity_Gosi_Special_Foreigners,Entity_Gosi_Gulf_Citizens,Entity_Gosi_Prisoners,Entity_Ajeer_Laborers,Entity_Foreigners From MOL_NITAQAT_III.dbo.ESTABLISHMENT_EVALUATION_history with (nolock)  where sequence_number=\'{{par2}}\' AND Labor_Office_Id=\'{{par1}}\' ORDER BY Run_Date  desc '
    AllContractInfoByLab = 'select StatusId,id,IsGosiMigrated,EstablishmentNameAr,LaborOfficeId,SequenceNumber,LaborerId from Contracts with (nolock) where LaborerId =\'{{LaborerId}}\' order by CreationDate DESC'
    TerminateContractsDetails = 'select LaborOfficeId,SequenceNumber,TCReasonId,ContractId,ProbationPeriod,NoticePeriod,LaborerIdNo,StatusId,CreationDate from TerminateContractRequest where LaborerIdNo= \'{{LaborerIdNo}}\' order by CreationDate desc'
    HRSDChangeSponser = 'SELECT top 1 IsHandled, HRSDDescription, IsFinalFailed, StatusId, IsFinalFailed, IsRunAway, ChangeSponsorRequestDetailId, CreationDate,LastModifiedDate FROM ChangeSponsorRequestDetailHRSD where ChangeSponsorRequestDetailId = \'{{ETId}}\' order by LastModifiedDate'
    HRSDChangeSponserLasteOneWithDesc = 'SELECT top 1 IsHandled, HRSDDescription, IsFinalFailed, StatusId, IsFinalFailed, IsRunAway, ChangeSponsorRequestDetailId, CreationDate,LastModifiedDate FROM ChangeSponsorRequestDetailHRSD where ChangeSponsorRequestDetailId = \'{{ETId}}\' and IsHandled=0 and HRSDDescription is not Null order by LastModifiedDate'
    HRSDChangeSponserNotHandeld = 'SELECT id, HRSDDescription, IsFinalFailed FROM ChangeSponsorRequestDetailHRSD where ChangeSponsorRequestDetailId = \'{{ETId}}\' and IsHandled = 0'
    AllContractInfoByLab2 = 'select StatusId,id,IsGosiMigrated,EstablishmentNameAr,LaborOfficeId,SequenceNumber from Contracts with (nolock) where ID =\'{{ID}}\' order by CreationDate DESC'
    ChangeSponsorDetails = 'select StatusId,concat(concat(SourceLaborOfficeId,\'-\'),SourceEstablishmentSequence) as \'SourceEstablishmentNumber\',concat(concat(DestinationLaborOfficeId,\'-\'),DestinationEstablishmentSequence) as \'DestinationEstablishmentNumber\' ,ReleaseDate from dbo.ChangeSponsorRequestDetails with (nolock) where LaborerIdNo =\'{{LaborerIdNo}}\' order by InsertDate desc'
    CheckGosiRegistered = 'select FK_ContractId,GosiResponse,ResponseDate from GOSILog where FK_ContractId=\'{{ID}}\' order by ResponseDate desc'
    LaborerInfoWPCheckBo = 'select L.FK_WpId,L.FK_lastWpId, L.PK_LaborerId,W.FK_Servcie_ServiceRequestTypeId,W.startDate,W.ExpirationDate, W.isSynchronized,L.LastWpExpirationDate as IqamaExp from MOL_GENERATION_PHASEI.dbo.MOL_laborer L with(nolock)Left join  MOL_GEneration_PHASEI.[dbo].[MOL_WORKPERMIT] W with (nolock) on  W.pk_WPID = L.FK_WpId   where BorderNo  = \'{{LabNo}}\''
    WPCheckDetails = 'select L.FK_WpId,L.FK_lastWpId, L.PK_LaborerId,W.FK_Servcie_ServiceRequestTypeId,W.startDate,W.ExpirationDate, W.isSynchronized,L.LastWpExpirationDate as IqamaExp from MOL_GENERATION_PHASEI.dbo.MOL_laborer L with(nolock)Left join  MOL_GEneration_PHASEI.[dbo].[MOL_WORKPERMIT] W with (nolock) on  W.pk_WPID = L.FK_WpId   where IdNo = \'{{LaborerIdNo}}'
    COCheckDetail = 'select top 1 StatusId,SourceJobId,DestinationJobId,InsertDate FROM dbo.ChangeOccupationRequestDetails with (nolock) where LaborerIdNo =\'{{LaborerIdNo}}\' order by InsertDate desc'
    CheckOccupation = 'SELECT Name FROM Lookup_Job WHERE id=\'{{JobID}}\'	'
    MolLaborerEst = 'SELECT IdNo FROM MOL_GEneration_PHASEI.dbo.MOL_laborer with(nolock) where EstablishmentSequenceNumber=\'{{par2}}\' and FK_CurrentLaborOfficeId=\'{{par1}}\' and FK_NationalityId=\'{{NationalityId}}\' and FK_LaborerStatusId=1 '
    MolLaborerEstEntity = 'Select IdNo from MOL_GENERATION_PHASEI.dbo.MOL_Laborer with(nolock) WHERE EstablishmentSequenceNumber in (select Sequence_Number from  MOL_NITAQAT_III.DBO.Establishment_evaluation with(nolock) where entity_number=\'{{EsInfoEntityId}}\' ) and FK_CurrentLaborOfficeId in (select Labor_Office_Id from MOL_NITAQAT_III.DBO.Establishment_evaluation with(nolock) where entity_number=\'{{EsInfoEntityId}}\' ) and FK_SaudiFlagId=2 and FK_LaborerStatusId =1 and FK_NationalityId=\'{{NationalityId}}\''
    EntityLaborersGroupByNationality = 'Select count(IDNO) As Numbers , FK_NationalityId from MOL_GENERATION_PHASEI.dbo.MOL_Laborer with(nolock) join MOL_NITAQAT_III.DBO.Establishment_evaluation with(nolock) on ( entity_number=\'{{EsInfoEntityId}}\' and EstablishmentSequenceNumber = Sequence_Number and FK_CurrentLaborOfficeId = Labor_Office_Id ) WHERE   FK_SaudiFlagId=2 and FK_LaborerStatusId =1 and FK_NationalityId=\'{{NationalityId}}\'  group by FK_NationalityId '


class HeaderCodes(Enum):
    E0000136 = '\nيرجى تزويدنا برقم المنشأة الصحيح لو سمحتم'
    E0000608 = ', يرجى إنتظار التحديث الأسبوعي في بداية كل أسبوع والمحاولة مرة أخرى'
    E0000101 = ',للحصول على رصيد لمنشأتك الواقعة في كيان مجمع صغير فئة أ ، يجب أن يكون لدى المنشأة موظف سعودي على الأقل أو أن يكون المالك مسجل على نفس المنشأة'


class ErrorCodesAndAnswerEnum(Enum):
    ODM00012 = 'عفواً، نطاق كيان المنشأة يجب أن يكون في الأخضر المتوسط أو أعلى الرجاء رفع نسبة التوطين في الكيان للاستفادة من الخدمات '
    ODM00012Small = 'للحصول على رصيد لمنشأتك الواقعة في كيان مجمع صغير فئة أ ، يجب أن يكون لدى المنشأة موظف سعودي على الأقل أو أن يكون المالك مسجل على نفس المنشأة'
    ODM00012SmallWithSyncIssue = 'يرجى الإحاطة بأنه كما يظهر لدينا تمت إضافة موظفين في الوقت القريب ولكن لم يتم عكسهم بعد بين التأمينات و وزارة الموارد البشرية \n, بعد وصولكم إلى عدد موظفين أكبر من 5 سيصبح رصيدكم بحسب نسبة التوطين وتدخلون النطاقات حسب نسبة التوطين (احمر, أخضر منخفض, أخضر متوسط, أخضر مرتفع, بلاتيني)\nمع التنويه بأن النطاق بلمنشآت بحجم صغير فئة (أ) يوجد لديها نطاقين وهم (أخضر صغير و أحمر صغير)'
    ODM00012SmallWithHalfSaudi = 'نفيدكم بأن أي منشاة لديها أقل من 6 موظفين يكون نطاقها: \n أخضر صغير فئة (أ) (بشرط تسجيل المالك أو بوجود موظف سعودي على الأقل) . \n\nو لديك موظف سعودي لم يحقق احدى الشروط لإحتساب الموظف في النطاقات حيث أنه تم احتسابه بـ {{EntitySaudisTotalFactorized}} موظف\nالمنشآت ذات هذا الحجم تكون أخضر صغير أو أحمر صغير ( الأخضر الصغير هو أعلى نطاق لحجم المنشأة الحالي )\nليتم دخول المنشأة ( فئة ب )  نظام الـ ( أحمر - أخضر - بلاتيني ) يجب أن يتم توظيف مزيد من الموظفين حتى تتعدى المنشأة عدد 6 موظفين . \n \nمع مراعاة أنه لا يتم الإحتساب في الحاسبة الحالات التي تؤثر على احتساب الموظف السعودي وهي كالتالي:  \n أن لا يقل راتب الموظف عن 4000 ريال سعودي \n أن لا يقل عمر الموظف عن 18 سنة\n أن لا يكون الموظف بدوام جزئي\n أن لا يكون الموظف طالباً \n \n \n {{notCountedEmployees}} \n \n \n'
    ODM00021 = 'منشآت الرقم الموحد لديها ملاحظات قائمة مصدرها حماية الأجور و التي تعتمد على التأمينات الإجتماعية ، ونفيدكم بأن ملاحظة حماية الأجور على مستوى جميع المنشآت للرقم الموحد .\n في حال تم التعامل مع الملاحظة في التأمينات يرجى تزويدنا بصورة من التأمينات تظهر بأنه تم إزالة المخالفة من قبلهم و صورة حديثة من منصة قوى للملاحظ'
    ODM00020 = 'الخدمة غير متاحة للمنشآت التي لديها موظفين بدون رخص عمل سارية أو إقامات منتهية بأي من منشآت الرقم الموحد(وليس على المنشأة بحد ذاتها) . الرجاء إصدار أو تجديد الرخص اللازمة عن طريق خدمة رخص العمل ثم المحاولة مرة أخرى.",\nالرجاء تجديد الرخص/الإقامات  للعمالة في هذه المنشآت التابعة لنفس الرقم الموحد \n\n {{ListOfExpired}} \n\nفي حال عمل خروج نهائي أو وجود الموظفين خارج المملكة بإقامة فإن الموظفين الذين حالتهم على رأس العمل في وزارة الموارد البشرية يجب تجديد رخصهم أو إقاماتهم.\nو في حال تغيب الموظف أو إخراجه من المنشأة بينما حالته على رأس العمل في وزارة الموارد البشرية \nو عند تغير حالة الموظف في وزارة الموارد البشرية سيتم التحديث في منصة قوى تلقائياً .\n'
    E0000018 = 'المنشأة غير مدرجة بالنطاقات ,يرجى إنتظار التحديث الأسبوعي في بداية كل أسبوع والمحاولة مرة أخرى'
    E0000015 = 'عفوًا، السجل التجاري للمنشأة غير ساري، حيث تم إنتهاؤه بتاريخ "{{CRExpDt}}", \n للاستفادة من الخدمة يرجى تجديد السجل التجاري لدى وزارة التجارة\n\nيجب أن يتم التعديل أولا في وزارة التجارة و بعد ذلك نرجو التحقق من تحديث بيانات المنشأة في وزارة الموارد البشرية ،\nحيث أنه يتم ربط البيانات آلياً مع قوى من قبل وزارة الموارد البشرية .\nفي حال استمرار الاشكالية نرجو ارفاق صورة توضح اختلاف البيانات مابين الوزارة وقوى حتى نتمكن من خدمتكم بشكل افضل'
    E0000606 = 'عفوًا، لا يوجد سجل التجاري للمنشأة , \n للاستفادة من الخدمة يرجى اضافة رقم السجل التجاري من الخدمات اضافة التراخيص في بوابة موقع وزارة الموارد البشرية'
    E00_AVG_COUNT = 'إحتساب المنشأة هو الإحتساب المتوسط وسيتم إحتساب الموظفين بشكل تدريجي إلى أن تخرج المنشأة من الإحتساب المتوسط, ويجب أن تظل منشأتكم في النطاق ( أخضر منخفض ) على الأقل أو ( أخضر صغير للفئة أ ) لمدة 13 أسبوع متواصلة  بشرط أن يكون متوسط الالتزام بحماية الأجور على مستوى الرقم الموحد لآخر 6 أشهر هو 50% على الأقل حتى يتم الاحتساب بشكل فوري .\n\n- حساب الموظفين هو المتوسط حاليا لآخر 26 أسبوع : حيث يتم احتساب متوسط مجموع عدد الموظفين على مدى 26 أسبوع, و كلما ازداد أو نقص عدد الموظفين سيتم رفع او نزول عدد الموظفين المحتسبين في النطاقات تدريجيا\n\n{{reason}}\n\n\n نرجو الإنتظار حتى تزداد نسبة التوطين بشكل تدريجي وتصبح النسبة كاملة و يتم ارتفاع النطاق . '
    E00_NITAQ_NOR = 'نفيدكم أن نطاقكم "{{NitaqatColor}}" ، و نسبة التوطين الحالية لديكم هي "{{EntitySaudiPercentage}}%" \n مع التنويه بأن عدد الموظفين و نسبة التوطين و النطاق و الرصيد يتم إحتسابه على مستوى الكيان (المنشآت بنفس النشاط) \nحيث أن عدد الموظفين السعوديين الفعلي على مستوى الكيان هو : {{EntitySaudisCount}}\nعدد الموظفين المقيمين الفعلي على مستوى الكيان هو : {{EntityForeignersCount}}\nالعدد الكلي للموظفين هو : {{EntityTotalCount}}\n\nتم احتساب عدد الموظفين بحاسبة النطاقات كالتالي : \nالموظفين السعوديين : {{EntitySaudisTotalFactorized}}\nالموظفين المقيمين : {{EntityForeignersTotalFactorized}}\n\nنشاط المنشأة في نطاقات هو : {{EconomicActivityName}}\nرمز نشاط ال ISIC4 هو : {{SubEconomicActivityId}}\n\nيرجى مراعاة أن الاحتساب في الحاسبة لا يأخذ بعين الاعتبار في حال عد الالتزام بالشروط التالية و التي تؤثر على احتساب الموظف السعودي و هي كالتالي: \n- أن لا يقل الراتب الأساسي للموظف عن 4000 ريال سعودي \n- أن لا يقل عمر الموظف عن 18 سنة\n- أن لا يكون الموظف بدوام جزئي\n- أن لا يكون الموظف طالباً\n\n {{notCountedEmployees}}\nمع التنويه بأن : \n- يتم تحديث النطاقات في بداية كل أسبوع\n- الموظفين السعوديين الذين رواتبهم الأساسية أقل من 3000 ريال لن يتم احتسابهم في حاسبة النطاقات. \n- نسبة للموظفين ذوي الإحتياجات الخاصة يتم إحتسابه ب 4 سعوديين في نسبة التوطين وذلك بما لا يتجاوز 10% من السعوديين بالكيان و  الكيانات التي لديها موظفين أكبر من ٥٠ موظف → يتطلب الحصول على شهادة مواءمة. \n- يتم إحتساب الموظفين (الطلاب) بنصف شرط تحقيق شروط الإحتساب كاملة ولكن بما لا يتجاوز 10% من اجمالي الموظفين السعوديين في حاسبة النطاقات \n- عقود الموظفين أصبحت من خلال إنشاء عقد على منصة قوى "خدمة إدارة عقود العمل".\n\nفي حال أردتم إضافة موظف سعودي إلى المنشأة : \n يرجى التأكد من إنشاء عقد إلكتروني للموظف السعودي من خلال منصة قوى و بعد الموافقة عليه يجب الإنتظار حتى يتم عكس بيانات الموظف بين التامينات  و وزارة الموارد البشرية مع التنويه بأنه في حال كان الموظف مسجل على أكتر من منشأة سيتم احتسابه و ظهوره على أول منشأة تم تسجيل الموظف عليها \n	\n\n\nلرفع النطاق و الحصول على رصيد يرجى زيادة نسبة التوطين على مستوى الكيان . 	\n\n{{E00_NITAQ_PERC}}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nنرجو الاستفادة من حاسبة نطاقات في المستشار الالكتروني لتفاصيل اكثر حول آلية رفع النطاق ونسب التوطين\nhttps://www.qiwa.sa/ar/tools-and-calculators/nitaqat-calculator'
    E00_NITAQ_PERC = 'ونفيدكم انه تم الإعتماد على نسب التوطين المخصصة للعام الثاني بتاريخ "28-01-2023" بدلاً من العام الأول في محرك نطاقات المطور حيث إن جدول نسب التوطين للنطاق الحالي بحسب نشاطكم  : \nالنطاق الأحمر : {{red}}\nالنطاق الأخضر منخفض : {{lowGreen}}\nالنطاق الأخضر متوسط : {{midGreen}}\nالنطاق الأخضر مرتفع : {{highGreen}}\nالنطاق البلاتيني : {{platinum}}'
    ESTING_BALANCE = 'المنشأة تأسيس و تنتهي فترة السماح بتاريخ {{allowanceEndDate}} وتمتلك الفئة {{tierIdName}} من الفئات التأسيسية ورصيد هذه الفئة ( {{TierBalance}} ) -, حيث تم استخدام هذا الرصيد في : \n- {{CurrentLaborers}} عمالة وافدين على الكيان\n- {{NotUsedVisas}} تأشيرات مصدرة و غير مستخدمة\n- {{PendingSponsorTransferRequests}} طلبات نقل خدمات قيد الإجراء\n- {{EntityAjeerPendingLaborers}} عمال أجير\n- \nوالرصيد حاليا هو : ({{AvailableVisas}})\nحيث إن الرصيد للمنشآت بنوع تأسيس لا يعتمد على نسبة التوطين ،\n\nيمكنكم انهاء فترة السماح و التحول الى توسع للحصول على رصيد حسب نسبة التوطين ونفيدكم بأنه تم ايقاف ترقية باقات التأسيس حالياً .'
    CONST_ZERO_STATIC_BALANCE = 'نفيدكم بأن المنشآت بنشاط ({{ActivityName}}) رصيد الإستقطاب ثابت حيث يتم منحمهم {{TotalBalance}} رصيد تأشيرات أو نقل خدمات \nحيث يكون رصيد لإستقطاب لديكم :\nاجمالي الرصيد الممنوح – (اجمالي عدد الموظفين المقيمين + التأشيرات المصدرة و الغير مستخدمة + طلبات نقل الخدمات قيد الاجراء) \n{{balanceInformation}}\n\n\nورصيد الإستقطاب الحالي {{CurrentBalance}}'
    ALLOWANCE_ENDS = 'تم شراء الفئة {{tierIdName}} بتاريخ {{requestDate}} .\n يرجى الاحاطة بأنه لإلغاء الفئة التأسيسية و استرجاع المبلغ المدفوع عليها, يجب أن يتحقق الشرطين التاليين : \n1- عدم مرور 30 يوم من تاريخ شراء الفئة\n2- عدم استخدام رصيد الفئة التأسيسة \n--تم فتح المنشأة بتاريخ {{InsertDate}} (فترة السماح هي 6 اشهر , وتمتد فترة السماح لمدة سنة بعد أول استخدام لرصيد التأسيس -لمرة واحدة فقط) --و تم انتهاء فترة السماح بتاريخ {{allowanceEndDate}}--وتم إنهاء فترة السماح من قبلكم بتاريخ {{terminationDate}} من قبل المستخدم صاحب رقم هوية {{terminationRequesterIdNo}}-- و أصبحت منشأتكم بنوع توسع.'
    ESTING_CONDITIONS = 'يرجى الإفادة بأن شروط أن تكون المنشأة تأسيس يجب أن يتحقق الشرطين التاليين \n1- أن لا يكون عمر المنشأة قد تجاوز ال 6 أشهر\n2- أن تكون الأولى على الكيان \nومنشأتكم رقم: {{estNo}} لم تحقق الشرط الثاني, حيث يوجد منشأة رقم {{firstEstOnEntity}} سبقتها بنفس النشاط'
    ENJAZ_TRY_AGAIN = 'الرجاء وضع رقم ال 700 في خانة السجل والرقم الصادر في خانة التأشيرة و المحاولة مرة أخرى في حال ما زالت المشكلة قائمة الرجاء تزويدنا بصورة من منصة انجاز تظهر فيها البيانات المدخلة والمشكلة الظاهرة'
    ENJAZ_TRY_AFTER = 'يرجى الإنتظار {{days}} والمحاولة مرة أخرى و وضع رقم ال 700 في خانة السجل والرقم الصادر في خانة التأشيرة و المحاولة مرة أخرى في حال ما زالت المشكلة قائمة الرجاء تزويدنا بصورة من منصة انجاز تظهر فيها البيانات المدخلة والمشكلة الظاهرة'
    NO_PEND_VISAS = 'لا يوجد تأشيرات بإنتظار الإلغاء,\n نفيدكم بأن إتمام اجراء الغاء التأشيرة يتم من قبل وزارة الداخلية ، ويتم عمل استرجاع الرسوم من قبل وزارة الداخلية بعد أن تصبح حالتها ملغية ، في حال كانت حالة التأشيرة "الغيت" ولم يتم استرجاع الرسوم حتى الان ، نرجو التواصل مع الداخلية للاستفسار اكثر عن حالة الرسوم المسترجعة من قبلهم .'
    CANCELED_VISA_REFUND = 'نفيدكم بأن إتمام اجراء الغاء التأشيرة يتم من قبل وزارة الداخلية ، ويتم عمل استرجاع الرسوم من قبل وزارة الداخلية بعد أن تصبح حالتها ملغية ، في حال كانت حالة التأشيرة "الغيت" ولم يتم استرجاع الرسوم حتى الان ، نرجو التواصل مع الداخلية للاستفسار اكثر عن حالة الرسوم المسترجعة من قبلهم .'
    OHOOD_CANCELED_VISAS = 'تم إلغاء التأشيرات الخاصة بكم نتيجة عدم الالتزام بالتوطين المطلوب بعد انتهاء فترة السماح. علمًا بأن منشأتك في النطاق الأحمر وذلك ينافي شروط الاستفادة من برنامج التأسيس.'
    ERROR_CANCELED_VISAS = 'نأسف لإبلاغك بأنه تم إلغاؤها تلقائياً من وزارة الداخلية لوجود مشكلة في بيانات التأشيرة, حيث معلومات التأشيرة يجب أن تكون مطابقة للبيانات في وزارة الداخلية و لم تكن المعلومات المسجلة على التأشيرة مطابقة لمعلومات وزارة الداخلية'
    EXPANSION_BALANCE_ANSWER = 'الرصيد يعتمد على نسبة السعودة ، و تختلف هذه النسبة بحسب النشاط التجاري للكيان ،\nو يتم منح المنشأة الرصيد المستحق بما لا يتسبب بنزول كيان المنشأة عن النطاق الأخضر المتوسط .\n\nليتم زيادة الرصيد يرجى زيادة عدد الموظفين السعوديين ، ونفيدكم بأن عدد الموظفين و الرصيد و نسب الجنسيات يتم احتسابه على مستوى الكيان .\n\n\nرصيدك الحالي :  {{currentBalance}} \n {{BalanceInfomation}}\nفي حال تم توظيف {{fStepCount}} سعودي بنفس الشروط سيصبح رصيدك {{newBalanceStep1}} و {{issuedVisas}} تاشيرات مصدرة و غير مستخدمة\nو في حال تم توظيف {{sStepCount}} سعودي بنفس الشروط سيصبح رصيدك {{newBalanceStep2}} و {{issuedVisas}} تاشيرات مصدرة و غير مستخدمة \n\nمع مراعاة أن الإحتساب في الحاسبة لا يحتسب الحالات بالشروط التالية و التي تؤثر على احتساب الموظف السعودي : \n- أن لا يقل الراتب الأساسي للموظف عن 4000 ريال سعودي \n- أن لا يقل عمر الموظف عن 18 سنة\n- أن لا يكون الموظف بدوام جزئي\n- أن لا يكون الموظف طالباً\n\nمع العلم بأن الرصيد يحتسب على مستوى الكيان و ليس على مستوى المنشأة بحد ذاتها و في حال طرأ أي تغيير على أي منشأة في الكيان يتم عكسه على رصيد الكيان .'
    VISA_NOT_FOUND = 'يرجى الإفادة بأن التأشيرات غير مسجلة على قوى, في حال تم إصدار التأشيرات من وزارة الموارد البشرية يوجد مشكلة في بيناتها في منصة قوى, حيث لا يمكن عرضها في منصة قوى أو إلغاؤها , ويمكنكم مراجعة قسم المساعدة في وزارة الموارد البشرية وطرح المشكلة عليهم وفي حال أردتم إلغاء التأشيرات  يرجى مراجعة وزارة الداخلية وإبلاغهم بحالة التأشيرة\n'
    PENDING_FOR_CANCELING = 'نفيدكم بأنه بعد ارسال طلب الالغاء في قوى ، يتم إتمام اجراء الغاء التأشيرة من قبل وزارة الداخلية ، نرجو إنتظار انتهاء إجراءات الإلغاء من قبلهم\n\nحالة التأشيرات في قوى بإنتظار الإلغاء من وزارة الداخلية\n&&\nونسبة للتأشيرات بأرقام الحدود : {{sentToMOFA}}\nوحالة التأشيرات بوزارة الداخلية "أرسلت للخارجية"\nحيث إن دور منصة قوى في حالة الإلغاء هو رفع طلب الإلغاء لوزارة الداخلية ويتم إتمام إجراءات الإلغاء و استرداد الرسوم من قلبهم,\n&&\nونسبة للتأشيرات بأرقام الحدود : {{autoSentToMOFA}}\nوحالة التأشيرات بوزارة الداخلية "آلياً أرسلت للخارجية"\nحيث إن دور منصة قوى في حالة الإلغاء هو رفع طلب الإلغاء لوزارة الداخلية ويتم إتمام إجراءات الإلغاء و استرداد الرسوم من قلبهم,\n&&\nونسبة للتأشيرات بأرقام الحدود : {{usedVisas}}\nوحالة التأشيرات بوزارة الداخلية "مستخدمة" حيث هذا هو السبب في عدم إلغاء التأشيرة, يمكنكم مراجعة منصة أبشر للتأكد من حالة التأشيرة \n\nتنويه : يمكنكم محاولة رفع تذكرة في وزارة الخارجية و طلب إلغاء التأشيرات في حال امكنكم ذالك عدا عن ذالك فإن التأشيرات لن تلغي من منصة قوى \n'
    noLogsOrErrorsForIssuingVisas = 'لا توجد لديكم أية طلبات معلقة في منصة قوى \n \n نفيدكم بأنه يتم دفع الرسوم الحكومية لوزارة الداخلية ، لذا نرجو مراجعة جهة الاختصاص وزارة الداخلية أو سداد للمدفوعات للاستفسار اكثر عن حالة المبلغ'
    ExceptionalBalance = 'المنشأة رقم "{{EstNo}}" من المنشآت المستثناه من نسب التوطين في وزارة الموارد البشرية حيث رصيدكم من وزارة الموارد البشرية هو "{{QuotaBalance}}" \n\nحيث يتم منح الرصيد بشكل ثابت ومعادلة الرصيد تكون (إجمالي الرصيد الممنوح - (عدد الموظفين الأجانب + التأشيرات المصدرة + طلبات نقل الخدمات))\n\nالرصيد بحسب الإستثناء هو {{QuotaBalance}} - {{totalUsedBalance}} = {{currentByExcp}}\n\n\n'
    ExemptionNotAvailableOwnerNotAch = '\n\nمن شروط الحصول على الاعفاء، أن يكون المالك مسجل في التامينات كمتفرغ وهذه المنشأة لا تحقق هذا الشرط، ونفيدكم بأنه قد يكون المالك مسجل في المنشأة في التامينات ولكن لم يتم احتسابه في الوزارة وذلك لعدة اسباب منها: \n\n\n\n- أن يكون المالك مسجل كمالك ولكن غير متفرغ.\n\n- أو يكون مسجل كموظف وليس المالك في المنشأة.\n\n- أو يكون المالك مسجل ومتفرغ ولكن يوجد منشاءات فرديه مسجلة بإسمه لم يتم اغلاقها.\n\n\n\nيمكنكم التحقق من سبب عدم احتساب المالك كمتفرغ من خلال المؤسسة العامة للتأمينات الاجتماعية.'
    ExemptionNotAvailableNumLabNotAch = 'من شروط الحصول على الاعفاء أن يكون عدد الموظفين مع المالك في المنشأة تسعة موظفيين أو اقل، وهذه المنشأة لا تحقق هذا الشرط، حيث إن عدد الموظفين المسجلين تحت الرقم الموحد (مع المالك) هو أكثر من تسعة موظفين.'
    MoreThan6Agri = 'نفيدكم بأنه وبحسب قواعد وزارة الموارد البشرية لا يتم إحتساب الموظفين منشآت نشاط المزراعيين والصياديين والرعاة (15) على مستوى الرقم الموحد بحد أقصى 6 عمال، ولديكم عدد الموظفيين المسجلين تحت النشاط الزراعي (15) هو ({{AllNoOfAgri}}) والمتحسب منهم هو ({{CountedFromAgri}}) .'
    IndustExempShouldWork = 'يوجد لدى المنشأة إعفاء صناعي ,يرجى تزويدنا بصورة عن المقابل المالي الظاهر للموظف'
    IndustExempNotActive = 'الاعفاء غير مفعل من وزارة الصناعة، يرجى مراجعة وزارة الصناعة لتفعيل الاعفاء، ثم يرجى المحاولة مرة اخرى.'
    IndustExempNotExist = 'المنشأة رقم ({{EstNo}}) غير مسجلة كمنشأة صناعية، يرجى مراجعة وزارة الصناعة لتسجيل المنشأة وتفعيل الاعفاء.'
    IndustExempExpired = ' الاعفاء غير مفعل من وزارة الصناعة (منتهي الصلاحية) حيث تم إنتهاء صلاحيته بتاريخ {{deactivateDate}}.'


class CommonAnswers(Enum):
    MissingInfo = 'نعتذر على الصعوبة التي واجهتكم ونود منكم تزويدنا بالمعلومات التالية لتسريع حل المشكلة وشكراً لتعاونكم:\n\n-توضيح المشكلة التي تواجهكم\n\n-صورة للمشكلة \n\n-رقم إقامات العمالة التي تواجهون مشاكل معها\n\n-رقم المنشاه في مكتب العمل مثال 00-000\n\n-رقم هاتف للتواصل'
